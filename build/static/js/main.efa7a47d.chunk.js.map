{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","SpacerSmall","styled","div","SpacerMedium","Container","flex","fd","jc","ai","test","image","TextDescription","p","StyledButton","button","StyledRoundButton","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","bwprice","setBwprice","className","style","backgroundColor","bgColor","hours","Date","getHours","setBgColor","id","src","bg","href","alt","onClick","e","preventDefault","slice","substr","map","result","name","checked","onChange","target","value","handlePriceChange","for","width","textAlign","color","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.efa7a47d.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 100px;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border: 1px solid black;\r\n  border-radius: 50px;\r\n  color: #000;\r\n  outline: none;\r\n  cursor: pointer;\r\n  transition: all 0.4s;\r\n  :hover {\r\n    box-shadow: inset 0 0 0 4px #ef476f, inset 0 0 0 8px #ffd166,\r\n      inset 0 0 0 12px #06d6a0, inset 0 0 0 16px #118ab2;\r\n    background: #073b4c;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: 1px solid black;\r\n  background-color: var(--primary);\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Mint a HD worm`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        type: \"0x0\",\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(`LETS GO! You just wormed up!`);\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  });\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const bg = () => {\n    let date = new Date();\n    let hours = date.getHours();\n    let bg;\n\n    if (hours < 6) {\n      bg = \"./images/bg1.png\";\n    } else if (hours >= 6 && hours < 12) {\n      bg = \"./images/bg2.png\";\n    } else if (hours >= 12 && hours < 18) {\n      bg = \"./images/bg3.png\";\n    } else if (hours >= 18 && hours < 24) {\n      bg = \"./images/bg4.png\";\n    }\n\n    return bg;\n  };\n\n  const setBgColor = () => {\n    let date = new Date();\n    let hours = date.getHours();\n    let bgColor;\n\n    if (hours < 6) {\n      bgColor = \"#1F2022\";\n    } else if (hours >= 6 && hours < 12) {\n      bgColor = \"moccasin\";\n    } else if (hours >= 12 && hours < 18) {\n      bgColor = \"darkolivegreen\";\n    } else if (hours >= 18 && hours < 24) {\n      bgColor = \"salmon\";\n    }\n\n    return bgColor;\n  };\n\n  let bwprices = [\n    \"0\",\n    \"1000000000000000000\",\n    \"5000000000000000000\",\n    \"10000000000000000000\",\n  ];\n  const [bwprice, setBwprice] = useState(\"10000000000000000000\");\n  const handlePriceChange = (e) => {\n    setBwprice(e.target.value);\n  };\n\n  CONFIG.WEI_COST = bwprice;\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: setBgColor() }}>\n      <div id=\"City\">\n        <img src={bg()} />\n        <img src=\"./images/city.png\" />\n      </div>\n      <div className=\"site\">\n        <div className=\"controls\">\n          <a id=\"controlslink\" href=\"\">\n            <img src=\"./images/twtr.svg\" alt=\"\" />\n          </a>\n          <a id=\"controlslink\" href=\"\">\n            <img src=\"./images/discord.svg\" alt=\"\" />\n          </a>\n          <a id=\"controlslink\" href=\"\">\n            <img src=\"./images/nftkey.svg\" alt=\"\" />\n          </a>\n          {blockchain.account === \"\" || blockchain.smartContract === null ? (\n            <button\n              id=\"connect-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(connect());\n                getData();\n              }}\n            >\n              LOG\n            </button>\n          ) : (\n            <p>\n              {blockchain.account.slice(0, 4) +\n                \"...\" +\n                blockchain.account.substr(-4)}\n            </p>\n          )}\n        </div>\n\n        <div className=\"site-container\">\n          <div id=\"Mintery\">\n            <div id=\"Masthead\" className=\"note\">\n              <fieldset>\n                <legend>Pay what you want!</legend>\n                <p>(keep in mind we like beer)</p>\n                <div className=\"toggle\">\n                  {bwprices.map((result) => (\n                    <>\n                      <input\n                        type=\"radio\"\n                        name=\"paywhatuwant\"\n                        checked={bwprice === result}\n                        onChange={(e) => handlePriceChange(e)}\n                        value={result}\n                        id={result}\n                      />\n                      <label for={result}>\n                        {\" \"}\n                        {result / 1000000000000000000} <br />\n                        ftm\n                      </label>\n                    </>\n                  ))}\n                </div>\n              </fieldset>\n              <a href=\"\" className=\"claimbutton\">\n                Claim whats yours!\n              </a>\n            </div>\n            <div id=\"Actions\">\n              <div className=\"note\">\n                <header>\n                  <p>\n                    <strong>\n                      1 free mint per wallet for wormz who are still alive.\n                    </strong>\n                  </p>\n                </header>\n                <div className=\"divide\" />\n\n                <main>\n                  <img id=\"Cage\" src=\"\" width=\"56px\" />\n                  <p>\n                    <strong>We are minting 25 Wormz.</strong> The Wormnation is\n                    generous, and will hand these over to brave members.\n                  </p>\n                </main>\n                <div className=\"divide\" />\n                <footer>\n                  <p>\n                    No roadmap. No utility. Holders might be rewarded in the\n                    future. CC0.{\" \"}\n                  </p>\n                </footer>\n                <div id=\"Follow\">\n                  <span>#BEYONDWORMZ</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"Missing\">\n            <div id=\"Actions\">\n              <img\n                id=\"Logo\"\n                className=\"unselectable\"\n                loading=\"lazy\"\n                src=\"./images/logo.gif\"\n                width=\"400\"\n              />\n              <div className=\"note\">\n                <header>\n                  <p>\n                    <strong>\n                      Digging in just now? Get some Wormz to claim a Beyond\n                      Worm.\n                    </strong>{\" \"}\n                  </p>\n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        Connect to the {CONFIG.NETWORK.NAME} network\n                      </s.TextDescription>\n                      <s.StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT\n                      </s.StyledButton>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <p>{feedback}</p>\n                      <p>\n                        {CONFIG.MAX_SUPPLY - data.totalSupply} left,{\" \"}\n                        {CONFIG.DISPLAY_COST} FTM each\n                      </p>\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <s.StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </s.StyledRoundButton>\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {mintAmount}\n                        </s.TextDescription>\n                        <s.SpacerMedium />\n                        <s.StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </s.StyledRoundButton>\n                      </s.Container>\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <s.StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"BUSY\" : \"BUY\"}\n                        </s.StyledButton>\n                      </s.Container>\n                    </>\n                  )}\n                </header>\n                <div className=\"divide\" />\n\n                <main>\n                  <p>\n                    <strong>Get Wormz from the flea market:</strong>\n                    <br />\n                    <a href=\"https://nftkey.app/collections/cryptowormz/\">\n                      OG wormz nftkey\n                    </a>\n                    <br />\n                    <a href=\"https://nftkey.app/collections/cryptowormzhd/\">\n                      HD wormz nftkey\n                    </a>\n                  </p>\n                </main>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"Underground\">\n        <div id=\"WormFamily\">\n          <img id=\"Family\" src=\"../images/family.png\" />\n        </div>\n        <img id=\"Sign\" src=\"../images/sign.png\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}