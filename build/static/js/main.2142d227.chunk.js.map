{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","connect","i","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","SpacerMedium","styled","div","Container","flex","fd","jc","ai","test","image","StyledRoundButton","p","button","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","claimNFTs","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","getData","getConfig","config","useEffect","setBgColor","bgColor","hours","Date","getHours","bwprice","setBwprice","className","style","backgroundColor","alt","id","src","bg","href","width","onClick","e","preventDefault","_address","Number","marginBottom","disabled","map","result","name","checked","onChange","target","handlePriceChange","for","lineHeight","newMintAmount","decrementMintAmount","incrementMintAmount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2142d227.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = (i) => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG[i].NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG[i].CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(\r\n            connectFailed(`One must be connected to ${CONFIG[i].NETWORK.NAME}.`)\r\n          );\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: 1px solid black;\r\n  background-color: var(--primary);\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Mint a HD worm`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState([\n    {\n      CONTRACT_ADDRESS: \"\",\n      SCAN_LINK: \"\",\n      NETWORK: {\n        NAME: \"\",\n        SYMBOL: \"\",\n        ID: 0,\n      },\n      NFT_NAME: \"\",\n      SYMBOL: \"\",\n      MAX_SUPPLY: 1,\n      WEI_COST: 0,\n      DISPLAY_COST: 0,\n      GAS_LIMIT: 0,\n      MARKETPLACE: \"\",\n      MARKETPLACE_LINK: \"\",\n      SHOW_BACKGROUND: false,\n    },\n    {\n      CONTRACT_ADDRESS: \"\",\n      SCAN_LINK: \"\",\n      NETWORK: {\n        NAME: \"\",\n        SYMBOL: \"\",\n        ID: 0,\n      },\n      NFT_NAME: \"\",\n      SYMBOL: \"\",\n      MAX_SUPPLY: 1,\n      WEI_COST: 0,\n      DISPLAY_COST: 0,\n      GAS_LIMIT: 0,\n      MARKETPLACE: \"\",\n      MARKETPLACE_LINK: \"\",\n      SHOW_BACKGROUND: false,\n    },\n  ]);\n\n  const claimNFTs = (i) => {\n    let cost = CONFIG[i].WEI_COST;\n    let gasLimit = CONFIG[i].GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG[i].NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG[i].CONTRACT_ADDRESS,\n        type: \"0x0\",\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(`LETS GO! You just wormed up!`);\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  });\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const bg = () => {\n    let date = new Date();\n    let hours = date.getHours();\n    let bg;\n\n    if (hours < 6) {\n      bg = \"./images/bg1.png\";\n    } else if (hours >= 6 && hours < 12) {\n      bg = \"./images/bg2.png\";\n    } else if (hours >= 12 && hours < 18) {\n      bg = \"./images/bg3.png\";\n    } else if (hours >= 18 && hours < 24) {\n      bg = \"./images/bg4.png\";\n    }\n\n    return bg;\n  };\n\n  const setBgColor = () => {\n    let date = new Date();\n    let hours = date.getHours();\n    let bgColor;\n\n    if (hours < 6) {\n      bgColor = \"#362FBB\";\n    } else if (hours >= 6 && hours < 12) {\n      bgColor = \"#FFB845\";\n    } else if (hours >= 12 && hours < 18) {\n      bgColor = \"#F97698\";\n    } else if (hours >= 18 && hours < 24) {\n      bgColor = \"#712275\";\n    }\n\n    return bgColor;\n  };\n\n  let bwprices = [\n    \"0\",\n    \"1000000000000000000\",\n    \"5000000000000000000\",\n    \"10000000000000000000\",\n    \"25000000000000000000\",\n  ];\n  const [bwprice, setBwprice] = useState(\"5000000000000000000\");\n  const handlePriceChange = (e) => {\n    setBwprice(e.target.value);\n  };\n\n  CONFIG[1].WEI_COST = bwprice;\n\n  const hideLog = () => {\n    let overlay = document.querySelector(\".log\");\n    overlay.style.display = \"none\";\n  };\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: setBgColor() }}>\n      <img alt=\"sun\" id=\"sun\" src=\"./images/sun.png\" />\n      <div id=\"City\">\n        <img alt=\"bg\" src={bg()} />\n        <img alt=\"city\" src=\"./images/city.png\" />\n        <div\n          alt=\"glow\"\n          id=\"glow\"\n          style={{ backgroundColor: setBgColor() }}\n        ></div>\n      </div>\n      {/* <div className=\"log\">\n        {blockchain.account === \"\" || blockchain.smartContract === null ? (\n          <>\n            <button\n              id=\"connect-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(connect(0));\n                getData();\n              }}\n            >\n              DIG IN\n            </button>\n            <p style={{ color: \"white\" }}>\n              One must operate in the Fantom network to enter.\n            </p>\n          </>\n        ) : (\n          <>{hideLog()}</>\n        )}\n      </div> */}\n      <div className=\"site\">\n        <div className=\"controls\">\n          <a id=\"controlslink\" href=\"https://twitter.com/crypto_wormz\">\n            <img alt=\"twitter\" src=\"./images/twitter.png\" />\n          </a>\n          <a id=\"controlslink\" href=\"https://discord.com/invite/b4Vt847Peg\">\n            <img alt=\"discord\" src=\"./images/discord.png\" />\n          </a>\n          <a id=\"controlslink\" href=\"https://linktr.ee/cryptowormz\">\n            <img alt=\"market\" src=\"./images/market.png\" />\n          </a>\n        </div>\n\n        <div className=\"site-container\">\n          <div id=\"Mintery\">\n            <img\n              alt=\"mobilelogo\"\n              id=\"mobileLogo\"\n              className=\"unselectable\"\n              loading=\"lazy\"\n              src=\"./images/logo.gif\"\n              width=\"400\"\n            />\n            <div id=\"Masthead\" className=\"note\">\n              {blockchain.account === \"\" ||\n              blockchain.smartContract === null ? (\n                <>\n                  <p>\n                    The Worm Nation operates in the <br />\n                    Fantom network\n                  </p>\n                  <button\n                    className=\"claimbutton\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(connect(1));\n                      getData();\n                    }}\n                  >\n                    LETS GO!\n                  </button>\n                  {blockchain.errorMsg !== \"\" ? (\n                    <>\n                      <p>{blockchain.errorMsg}</p>\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {blockchain.smartContract._address !==\n                  CONFIG[1].CONTRACT_ADDRESS ? (\n                    <>\n                      <p>Y'all got any more of those Beyond Wormz?</p>\n                      <button\n                        className=\"claimbutton\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect(1));\n                          getData();\n                          console.log(Number(data.totalSupply));\n                        }}\n                      >\n                        Check availability\n                      </button>\n                    </>\n                  ) : Number(blockchain.smartContract.methods.totalSupply()) >=\n                    CONFIG[1].MAX_SUPPLY ? (\n                    <div>\n                      <h1>Thank you!</h1>\n                      <p>\n                        All the Beyond Wormz have been claimed! <br />\n                        Check the community pages and come say hi!\n                      </p>\n                      <a href=\"https://linktr.ee/cryptowormz\">\n                        <img\n                          style={{ width: \"100px\", marginBottom: \"5%\" }}\n                          src=\"./images/market.png\"\n                          alt=\"market\"\n                        />\n                      </a>\n                    </div>\n                  ) : (\n                    <>\n                      <button\n                        className=\"claimbutton\"\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect(1));\n                          claimNFTs(1);\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? (\n                          feedback\n                        ) : (\n                          <>\n                            Claim what's <span>yours!</span>\n                          </>\n                        )}\n                      </button>\n\n                      <fieldset>\n                        <legend>Pay what you want!</legend>\n                        <p>(keep in mind we like beer)</p>\n                        <p>{CONFIG[1].MAX_SUPPLY - data.totalSupply} left</p>\n                        <div className=\"toggle\">\n                          {bwprices.map((result) => (\n                            <>\n                              <input\n                                type=\"radio\"\n                                name=\"paywhatuwant\"\n                                checked={bwprice === result}\n                                onChange={(e) => handlePriceChange(e)}\n                                value={result}\n                                id={result}\n                              />\n                              <label for={result}>\n                                {\" \"}\n                                {result / 1000000000000000000} <br />\n                                ftm\n                              </label>\n                            </>\n                          ))}\n                        </div>\n                      </fieldset>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"note\">\n              <header>\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <div>\n                    <p>Connect to the {CONFIG[0].NETWORK.NAME} network </p>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <p>{blockchain.errorMsg}</p>\n                      </>\n                    ) : null}\n                  </div>\n                ) : (\n                  <>\n                    {blockchain.smartContract._address !==\n                    CONFIG[0].CONTRACT_ADDRESS ? (\n                      <>\n                        <p>\n                          <strong>\n                            Digging in just now? Get some Wormz to claim a\n                            Beyond Worm, if there are any left!\n                          </strong>{\" \"}\n                        </p>\n                        <button\n                          className=\"claimbutton\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            dispatch(connect(0));\n                            getData();\n                            console.log(blockchain.smartContract._address);\n                          }}\n                        >\n                          Check availability\n                        </button>\n                      </>\n                    ) : Number(\n                        blockchain.smartContract.methods.totalSupply()\n                      ) >= CONFIG[1].MAX_SUPPLY ? (\n                      <div>\n                        <h1>Thank you!</h1>\n                        <p>\n                          All the HD Worms have been minted! <br />\n                          Check the community pages and come say hi!\n                        </p>\n                        <a\n                          className=\"controls\"\n                          href=\"https://linktr.ee/cryptowormz\"\n                        >\n                          <img\n                            style={{ width: \"100px\", marginBottom: \"5%\" }}\n                            src=\"./images/market.png\"\n                            alt=\"market\"\n                          />\n                        </a>\n                      </div>\n                    ) : (\n                      <>\n                        <p>\n                          <strong>\n                            Digging in just now? Get some Wormz to claim a\n                            Beyond Worm, if there are any left!\n                          </strong>{\" \"}\n                        </p>\n                        <p>\n                          {CONFIG[0].DISPLAY_COST} FTM each\n                          <br />\n                          {CONFIG[0].MAX_SUPPLY - data.totalSupply} left\n                        </p>\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <s.StyledRoundButton\n                            style={{ lineHeight: 0.4 }}\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              decrementMintAmount();\n                            }}\n                          >\n                            -\n                          </s.StyledRoundButton>\n                          <s.SpacerMedium />\n                          <p>{mintAmount}</p>\n                          <s.SpacerMedium />\n                          <s.StyledRoundButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              incrementMintAmount();\n                            }}\n                          >\n                            +\n                          </s.StyledRoundButton>\n                        </s.Container>\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <button\n                            className=\"claimbutton\"\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              dispatch(connect(0));\n                              claimNFTs(0);\n                              getData();\n                            }}\n                          >\n                            {claimingNft ? feedback : \"buy a HD worm\"}\n                          </button>\n                        </s.Container>\n                      </>\n                    )}\n                  </>\n                )}\n              </header>\n\n              <div className=\"divide\" />\n\n              <main>\n                <p>\n                  <strong>Get Wormz from the flea market:</strong>\n                  <br />\n                  <br />\n\n                  <a\n                    className=\"link\"\n                    href=\"https://nftkey.app/collections/cryptowormz/\"\n                  >\n                    OG wormz NFTKEY\n                  </a>\n                  <br />\n                  <br />\n\n                  <a\n                    className=\"link\"\n                    href=\"https://nftkey.app/collections/cryptowormzhd/\"\n                  >\n                    HD wormz NFTKEY\n                  </a>\n                </p>\n              </main>\n            </div>\n          </div>\n          <div id=\"Actions\">\n            <img\n              alt=\"logo\"\n              id=\"Logo\"\n              className=\"unselectable\"\n              loading=\"lazy\"\n              src=\"./images/logo.gif\"\n              width=\"400\"\n            />\n            <div className=\"note\">\n              <header>\n                <p>\n                  <strong>\n                    1 free mint per wallet for wormz who are still alive.\n                  </strong>\n                  <br />\n                  <br />\n                  <strong>\n                    <u>2+2 OG and HD worms required</u>\n                  </strong>{\" \"}\n                  to mint a Beyond Worm. This will be the way for future\n                  projects.\n                  <br /> <br />\n                  <strong>Dont be greedy!</strong>\n                </p>\n              </header>\n              <div className=\"divide\" />\n\n              <main>\n                <img\n                  alt=\"cage\"\n                  id=\"Cage\"\n                  src=\"../images/cage.png\"\n                  width=\"56px\"\n                />\n                <p>\n                  <strong>We are minting 10 Wormz.</strong>\n                  <br /> The Worm Nation is generous, and will hand these over\n                  to brave members.\n                </p>\n              </main>\n              <div className=\"divide\" />\n              <footer>\n                <p>\n                  No roadmap. No utility. Holders might be rewarded in the\n                  future. CC0.\n                </p>\n              </footer>\n              <div id=\"Follow\">\n                <span>#BEYONDWORMZ</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"Underground\">\n        <div id=\"WormFamily\">\n          <img alt=\"sign\" id=\"Sign\" src=\"../images/sign.png\" />\n          <img alt=\"family\" id=\"Family\" src=\"../images/family.png\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}